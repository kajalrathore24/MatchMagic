{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kajal\\\\OneDrive\\\\Desktop\\\\Gaming website\\\\magic\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img/cover.png\"\n}, {\n  \"src\": \"/img/potion-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/ring-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/scroll-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/shield-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/sword-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/helmet-1.png\",\n  matched: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  // shuffle cards\n  const shuffleCards = () => {\n    const shuffleCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffleCards);\n    setTurns(0);\n  };\n\n  // handle a choice\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n    // not here\n  };\n\n  // compare 2 selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        // console.log(\"those cards match\")\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        // console.log(\"those cards do not match\")\n        resetTurn();\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  console.log(cards);\n\n  // reset choices and increase turn\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: true\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UgYVv8xwO0vRPJh3/HlVWel7YNE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SingleCard","jsxDEV","_jsxDEV","cardImages","matched","App","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","sort","Math","random","map","card","id","handleChoice","src","prevCards","resetTurn","console","log","prevTurns","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flipped","_c","$RefreshReg$"],"sources":["C:/Users/kajal/OneDrive/Desktop/Gaming website/magic/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport './App.css'\nimport SingleCard from './components/SingleCard'\n\nconst cardImages=[\n  {\"src\":\"/img/cover.png\"},\n  {\"src\":\"/img/potion-1.png\",matched:false},\n  {\"src\":\"/img/ring-1.png\",matched:false},\n  {\"src\":\"/img/scroll-1.png\",matched:false},\n  {\"src\":\"/img/shield-1.png\",matched:false},\n  {\"src\":\"/img/sword-1.png\",matched:false},\n  {\"src\":\"/img/helmet-1.png\",matched:false}\n]\n\n\nfunction App() {\n  const [cards,setCards]=useState([])\n  const [turns,setTurns]=useState(0)\n  const [choiceOne,setChoiceOne]=useState(null)\n  const [choiceTwo,setChoiceTwo]=useState(null)\n\n  // shuffle cards\n  const shuffleCards =() =>{\n    const shuffleCards=[...cardImages,...cardImages]\n    .sort(() => Math.random()-0.5)\n    .map((card) => ({...card,id:Math.random()}))\n    \n    setCards(shuffleCards)\n    setTurns(0)\n  }\n\n  // handle a choice\n  const handleChoice = (card) =>{\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n    // not here\n    \n  }\n\n  // compare 2 selected cards\n  useEffect(()=>{\n    if(choiceOne && choiceTwo){\n      if(choiceOne.src === choiceTwo.src){\n        // console.log(\"those cards match\")\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if(card.src === choiceOne.src){\n              return {...card, matched: true}\n            }else{\n              return card\n            }\n          })\n        })\n        resetTurn()\n      }else{\n        // console.log(\"those cards do not match\")\n        resetTurn()\n      }\n    }\n  },[choiceOne,choiceTwo])\n\n  console.log(cards)\n\n  // reset choices and increase turn\n  const resetTurn = () =>{\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns+1)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className='card-grid'>\n        {cards.map(card=>(\n         <SingleCard key={card.id} card={card} handleChoice={handleChoice} flipped/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}